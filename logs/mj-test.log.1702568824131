INFO  16:40:37,059 - Compiling source file: C:\Users\User\Desktop\PP projekat\workspace\MJCompiler\test\tests\global_test.mj
INFO  16:40:37,064 - #2 program
INFO  16:40:37,064 - #42 MJGlobalTest
INFO  16:40:37,064 - #3 namespace
INFO  16:40:37,065 - #42 Addition
INFO  16:40:37,065 - #39 {
INFO  16:40:37,065 - #39 {
INFO  16:40:37,065 - #42 int
INFO  16:40:37,065 - #42 sum
INFO  16:40:37,065 - #37 (
INFO  16:40:37,065 - #42 int
INFO  16:40:37,065 - #42 z
INFO  16:40:37,065 - #34 ,
INFO  16:40:37,065 - #42 int
INFO  16:40:37,065 - #42 d
INFO  16:40:37,066 - #38 )
INFO  16:40:37,066 - #39 {
INFO  16:40:37,066 - #14 return
INFO  16:40:37,066 - #42 z
INFO  16:40:37,066 - #15 +
INFO  16:40:37,066 - #42 d
INFO  16:40:37,066 - #32 ;
INFO  16:40:37,066 - #40 }
INFO  16:40:37,067 - #42 int
INFO  16:40:37,067 - #42 inkrement
INFO  16:40:37,067 - #37 (
INFO  16:40:37,067 - #42 int
INFO  16:40:37,067 - #42 a
INFO  16:40:37,067 - #34 ,
INFO  16:40:37,067 - #42 int
INFO  16:40:37,067 - #42 inc
INFO  16:40:37,067 - #38 )
INFO  16:40:37,067 - #42 int
INFO  16:40:37,067 - #42 pom
INFO  16:40:37,067 - #32 ;
INFO  16:40:37,067 - #39 {
INFO  16:40:37,067 - #4 if
INFO  16:40:37,067 - #37 (
INFO  16:40:37,067 - #42 inc
INFO  16:40:37,068 - #20 ==
INFO  16:40:37,068 - #43 1
INFO  16:40:37,068 - #38 )
INFO  16:40:37,068 - #42 pom
INFO  16:40:37,068 - #33 =
INFO  16:40:37,068 - #43 1
INFO  16:40:37,068 - #32 ;
INFO  16:40:37,068 - #5 else
INFO  16:40:37,068 - #4 if
INFO  16:40:37,068 - #37 (
INFO  16:40:37,069 - #42 inc
INFO  16:40:37,069 - #20 ==
INFO  16:40:37,069 - #43 2
INFO  16:40:37,069 - #38 )
INFO  16:40:37,069 - #42 pom
INFO  16:40:37,069 - #33 =
INFO  16:40:37,069 - #42 a
INFO  16:40:37,069 - #32 ;
INFO  16:40:37,069 - #14 return
INFO  16:40:37,069 - #42 sum
INFO  16:40:37,069 - #37 (
INFO  16:40:37,069 - #42 a
INFO  16:40:37,069 - #34 ,
INFO  16:40:37,070 - #42 pom
INFO  16:40:37,070 - #38 )
INFO  16:40:37,070 - #32 ;
INFO  16:40:37,070 - #40 }
INFO  16:40:37,070 - #40 }
INFO  16:40:37,070 - #40 }
INFO  16:40:37,070 - #42 int
INFO  16:40:37,070 - #42 x
INFO  16:40:37,070 - #32 ;
INFO  16:40:37,070 - #42 int
INFO  16:40:37,070 - #42 y
INFO  16:40:37,070 - #32 ;
INFO  16:40:37,070 - #42 bool
INFO  16:40:37,070 - #42 verify
INFO  16:40:37,070 - #37 (
INFO  16:40:37,071 - #38 )
INFO  16:40:37,071 - #39 {
INFO  16:40:37,071 - #14 return
INFO  16:40:37,071 - #41 false
INFO  16:40:37,071 - #32 ;
INFO  16:40:37,071 - #40 }
INFO  16:40:37,071 - #39 {
INFO  16:40:37,071 - #42 int
INFO  16:40:37,071 - #42 main
INFO  16:40:37,071 - #37 (
INFO  16:40:37,071 - #38 )
INFO  16:40:37,071 - #39 {
INFO  16:40:37,071 - #4 if
INFO  16:40:37,071 - #37 (
INFO  16:40:37,071 - #43 1
INFO  16:40:37,072 - #21 !=
INFO  16:40:37,072 - #43 1
INFO  16:40:37,072 - #38 )
INFO  16:40:37,072 - #9 print
INFO  16:40:37,072 - #37 (
INFO  16:40:37,072 - #16 -
INFO  16:40:37,072 - #43 6
INFO  16:40:37,072 - #38 )
INFO  16:40:37,072 - #32 ;
INFO  16:40:37,072 - #5 else
INFO  16:40:37,072 - #9 print
INFO  16:40:37,072 - #37 (
INFO  16:40:37,072 - #43 0
INFO  16:40:37,072 - #38 )
INFO  16:40:37,072 - #32 ;
INFO  16:40:37,072 - #42 ibool
INFO  16:40:37,072 - #33 =
INFO  16:40:37,072 - #41 false
INFO  16:40:37,072 - #32 ;
INFO  16:40:37,073 - #8 for
INFO  16:40:37,073 - #37 (
INFO  16:40:37,073 - #42 i
INFO  16:40:37,073 - #33 =
INFO  16:40:37,073 - #43 0
INFO  16:40:37,073 - #32 ;
INFO  16:40:37,073 - #42 i
INFO  16:40:37,073 - #24 <
INFO  16:40:37,073 - #43 5
INFO  16:40:37,073 - #32 ;
INFO  16:40:37,074 - #42 i
INFO  16:40:37,074 - #28 ++
INFO  16:40:37,074 - #38 )
INFO  16:40:37,074 - #39 {
INFO  16:40:37,074 - #4 if
INFO  16:40:37,074 - #37 (
INFO  16:40:37,074 - #42 i
INFO  16:40:37,074 - #20 ==
INFO  16:40:37,074 - #43 2
INFO  16:40:37,075 - #38 )
INFO  16:40:37,075 - #42 ibool
INFO  16:40:37,075 - #33 =
INFO  16:40:37,075 - #41 true
INFO  16:40:37,075 - #32 ;
INFO  16:40:37,075 - #40 }
INFO  16:40:37,075 - #4 if
INFO  16:40:37,075 - #37 (
INFO  16:40:37,075 - #42 ibool
INFO  16:40:37,075 - #38 )
INFO  16:40:37,075 - #4 if
INFO  16:40:37,075 - #37 (
INFO  16:40:37,076 - #42 i
INFO  16:40:37,076 - #20 ==
INFO  16:40:37,076 - #43 5
INFO  16:40:37,076 - #38 )
INFO  16:40:37,076 - #9 print
INFO  16:40:37,076 - #37 (
INFO  16:40:37,076 - #43 1
INFO  16:40:37,076 - #38 )
INFO  16:40:37,076 - #32 ;
INFO  16:40:37,076 - #5 else
INFO  16:40:37,076 - #9 print
INFO  16:40:37,076 - #37 (
INFO  16:40:37,076 - #16 -
INFO  16:40:37,076 - #43 1
INFO  16:40:37,076 - #38 )
INFO  16:40:37,076 - #32 ;
INFO  16:40:37,076 - #42 a
INFO  16:40:37,077 - #33 =
INFO  16:40:37,077 - #43 2
INFO  16:40:37,077 - #32 ;
INFO  16:40:37,077 - #42 niz
INFO  16:40:37,077 - #33 =
INFO  16:40:37,077 - #42 new
INFO  16:40:37,077 - #42 int
INFO  16:40:37,077 - #35 [
INFO  16:40:37,077 - #43 3
INFO  16:40:37,077 - #36 ]
INFO  16:40:37,077 - #32 ;
INFO  16:40:37,077 - #42 niz
INFO  16:40:37,077 - #35 [
INFO  16:40:37,077 - #43 0
INFO  16:40:37,077 - #36 ]
INFO  16:40:37,077 - #33 =
INFO  16:40:37,077 - #43 1
INFO  16:40:37,078 - #17 *
INFO  16:40:37,078 - #42 a
INFO  16:40:37,078 - #32 ;
INFO  16:40:37,078 - #42 niz
INFO  16:40:37,078 - #35 [
INFO  16:40:37,078 - #43 1
INFO  16:40:37,078 - #36 ]
INFO  16:40:37,078 - #33 =
INFO  16:40:37,078 - #43 2
INFO  16:40:37,078 - #17 *
INFO  16:40:37,078 - #42 a
INFO  16:40:37,078 - #32 ;
INFO  16:40:37,078 - #42 niz
INFO  16:40:37,078 - #35 [
INFO  16:40:37,078 - #43 2
INFO  16:40:37,078 - #36 ]
INFO  16:40:37,078 - #33 =
INFO  16:40:37,079 - #42 Addition
INFO  16:40:37,079 - #30 :
INFO  16:40:37,079 - #30 :
INFO  16:40:37,079 - #42 sum
INFO  16:40:37,079 - #37 (
INFO  16:40:37,079 - #42 niz
INFO  16:40:37,079 - #35 [
INFO  16:40:37,079 - #43 1
INFO  16:40:37,079 - #36 ]
INFO  16:40:37,079 - #34 ,
INFO  16:40:37,079 - #42 niz
INFO  16:40:37,079 - #35 [
INFO  16:40:37,079 - #43 0
INFO  16:40:37,079 - #36 ]
INFO  16:40:37,079 - #38 )
INFO  16:40:37,079 - #17 *
INFO  16:40:37,079 - #42 a
INFO  16:40:37,079 - #15 +
INFO  16:40:37,079 - #43 1
INFO  16:40:37,079 - #32 ;
INFO  16:40:37,079 - #9 print
INFO  16:40:37,079 - #37 (
INFO  16:40:37,080 - #42 eol
INFO  16:40:37,080 - #38 )
INFO  16:40:37,080 - #32 ;
INFO  16:40:37,080 - #8 for
INFO  16:40:37,080 - #37 (
INFO  16:40:37,080 - #42 i
INFO  16:40:37,080 - #33 =
INFO  16:40:37,080 - #43 0
INFO  16:40:37,080 - #32 ;
INFO  16:40:37,080 - #42 i
INFO  16:40:37,080 - #24 <
INFO  16:40:37,080 - #43 10
INFO  16:40:37,080 - #32 ;
INFO  16:40:37,080 - #38 )
INFO  16:40:37,080 - #39 {
INFO  16:40:37,080 - #4 if
INFO  16:40:37,080 - #37 (
INFO  16:40:37,080 - #42 i
INFO  16:40:37,080 - #20 ==
INFO  16:40:37,080 - #43 3
INFO  16:40:37,081 - #38 )
INFO  16:40:37,081 - #39 {
INFO  16:40:37,081 - #42 i
INFO  16:40:37,081 - #28 ++
INFO  16:40:37,081 - #32 ;
INFO  16:40:37,081 - #7 continue
INFO  16:40:37,081 - #32 ;
INFO  16:40:37,081 - #40 }
INFO  16:40:37,081 - #4 if
INFO  16:40:37,081 - #37 (
INFO  16:40:37,081 - #42 i
INFO  16:40:37,081 - #20 ==
INFO  16:40:37,081 - #43 4
INFO  16:40:37,081 - #38 )
INFO  16:40:37,081 - #6 break
INFO  16:40:37,081 - #32 ;
INFO  16:40:37,081 - #42 i
INFO  16:40:37,081 - #33 =
INFO  16:40:37,081 - #42 Addition
INFO  16:40:37,081 - #30 :
INFO  16:40:37,081 - #30 :
INFO  16:40:37,082 - #42 inkrement
INFO  16:40:37,082 - #37 (
INFO  16:40:37,082 - #42 i
INFO  16:40:37,082 - #34 ,
INFO  16:40:37,082 - #43 1
INFO  16:40:37,082 - #38 )
INFO  16:40:37,082 - #32 ;
INFO  16:40:37,082 - #40 }
INFO  16:40:37,082 - #40 }
INFO  16:40:37,082 - #40 }
